from aiogram import Router
from aiogram.types import Message
from aiogram.filters import CommandStart

from db.queries import get_user, insert_new_user, get_role_name, NEWBIE_ROLE_ID
from keyboards.inline import request_access_keyboard, build_main_menu

router = Router()

@router.message(CommandStart())
async def handle_start(message: Message):
    tg_id = message.from_user.id
    user = await get_user(tg_id)

    if user:
        role_name = await get_role_name(user["role_id"])
    else:
        role_name = None

    match user:
        case None:
            # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º
            await insert_new_user(
                tg_id,
                message.from_user.full_name,
                message.from_user.username
            )
            await message.answer(
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
                "–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ <b>–Ω–æ–≤–∏—á–æ–∫</b>.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø.",
                reply_markup=request_access_keyboard()
            )

        case _ if user["role_id"] == 3:
            await message.answer(
                f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['full_name']}!\n"
                f"–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ <b>{role_name}</b>.",
                reply_markup=build_main_menu(user["role_id"])
            )

        case _ if user["role_id"] < 3:
            await message.answer(
                f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['full_name']}!\n"
                f"–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ <b>{role_name}</b>.",
                reply_markup=build_main_menu(user["role_id"])
            )

        case _ if user["role_id"] == NEWBIE_ROLE_ID:
            await message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user['full_name']}!\n"
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –µ–≥–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å.",
                reply_markup=request_access_keyboard()
            )

        case _:
            await message.answer("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
